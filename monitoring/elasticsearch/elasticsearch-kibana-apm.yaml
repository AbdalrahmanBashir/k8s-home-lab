apiVersion: v1
kind: Secret
metadata:
  name: elastic-auth
  namespace: logging
type: Opaque
stringData:
  ELASTIC_PASSWORD: "Password123"
  KIBANA_SYSTEM_PASSWORD: "ChangeMe-Strong!"   # kibana_system password
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: logging
spec:
  serviceName: "elasticsearch"
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: set-permissions
          image: busybox:1.36
          securityContext:
            privileged: true
          command: ["/bin/sh","-lc"]
          args:
            - |
              mkdir -p /host/elasticsearch-data
              chown -R 1000:1000 /host/elasticsearch-data || true
          volumeMounts:
            - name: es-hostpath
              mountPath: /host
        - name: sysctl-bootstrap
          image: busybox:1.36
          securityContext:
            privileged: true
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -e
              sysctl -w vm.max_map_count=262144
              sysctl -w fs.file-max=1048576
              sysctl -w fs.inotify.max_user_instances=2048
              sysctl -w fs.inotify.max_user_watches=1048576
      containers:
        - name: es
          image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
          ports:
            - containerPort: 9200
            - containerPort: 9300
          env:
            - name: discovery.type
              value: single-node
            - name: ES_JAVA_OPTS
              value: "-Xms1g -Xmx1g"
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.security.http.ssl.enabled
              value: "false"
            - name: xpack.security.transport.ssl.enabled
              value: "false"
            - name: node.store.allow_mmap
              value: "false"
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-auth
                  key: ELASTIC_PASSWORD
          volumeMounts:
            - name: es-hostpath
              mountPath: /usr/share/elasticsearch/data
              subPath: elasticsearch-data
          resources:
            requests:
              cpu: 250m
              memory: 2Gi
            limits:
              cpu: "1"
              memory: 4Gi
          readinessProbe:
            tcpSocket:
              port: 9200
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 9200
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 10
      volumes:
        - name: es-hostpath
          hostPath:
            path: /var/lib/elasticsearch
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: logging
spec:
  selector:
    app: elasticsearch
  ports:
    - name: http
      port: 9200
      targetPort: 9200
    - name: transport
      port: 9300
      targetPort: 9300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      initContainers:
        - name: kibana-set-kbn-password
          image: curlimages/curl:8.10.1
          env:
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-auth
                  key: ELASTIC_PASSWORD
            - name: KBN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-auth
                  key: KIBANA_SYSTEM_PASSWORD
            - name: ES_HOST
              value: "http://elasticsearch.logging.svc.cluster.local:9200"
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -eu
              echo "Waiting for Elasticsearch at ${ES_HOST}..."
              # Wait until ES answers (200 or 401 means the port is open)
              for i in $(seq 1 300); do
                code=$(curl -s -o /dev/null -w "%{http_code}" --max-time 2 "${ES_HOST}")
                if [ "$code" = "200" ] || [ "$code" = "401" ]; then
                  break
                fi
                sleep 2
              done
              echo "Setting kibana_system password..."
              curl -sS -u "elastic:${ES_PASSWORD}" \
                   -H 'Content-Type: application/json' \
                   -X POST "${ES_HOST}/_security/user/kibana_system/_password" \
                   -d "{\"password\":\"${KBN_PASSWORD}\"}"
              echo "kibana_system password set."
      containers:
        - name: kb
          image: docker.elastic.co/kibana/kibana:8.14.3
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: '["http://elasticsearch.logging.svc.cluster.local:9200"]'
            - name: ELASTICSEARCH_USERNAME
              value: "kibana_system"
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-auth
                  key: KIBANA_SYSTEM_PASSWORD
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 300m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /api/status
              port: 5601
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 24
          livenessProbe:
            httpGet:
              path: /login
              port: 5601
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: logging
spec:
  selector:
    app: kibana
  ports:
    - name: http
      port: 5601
      targetPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apm-server
  namespace: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apm-server
  template:
    metadata:
      labels:
        app: apm-server
    spec:
      containers:
        - name: apm
          image: docker.elastic.co/apm/apm-server:8.14.3
          args:
            - "-e"
            - "-E"
            - "apm-server.host=0.0.0.0:8200"
            - "-E"
            - 'output.elasticsearch.hosts=["http://elasticsearch.logging.svc.cluster.local:9200"]'
          env:
            - name: ELASTICSEARCH_USERNAME
              value: "elastic"
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-auth
                  key: ELASTIC_PASSWORD
            - name: ELASTIC_APM_SERVER_SECRET_TOKEN
              value: ""
          ports:
            - containerPort: 8200
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 400m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /
              port: 8200
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 24
          livenessProbe:
            httpGet:
              path: /
              port: 8200
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: apm-server
  namespace: logging
spec:
  selector:
    app: apm-server
  ports:
    - name: http
      port: 8200
      targetPort: 8200
